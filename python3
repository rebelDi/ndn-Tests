FROM openfaas/classic-watchdog:0.13.4 as watchdog
FROM ubuntu:20.04

ARG TARGETPLATFORM
ARG BUILDPLATFORM

ENV DEBIAN_FRONTEND noninteractive

RUN apt-get -q update -y && \
  apt-get -q install -y \
  apt-transport-https \
  apt-utils \
  build-essential \
  opencv \
  cron \
  curl \
  g++ \
  git \
  gcc \
  language-pack-id \
  libcairo2-dev \
  libexpat1 \
  libffi-dev \
  libssl-dev \
  libx11-dev \
  libxml2-dev \
  libxslt1-dev \
  libxss1 \
  libjpeg-dev \
  libfreetype6-dev \
  nano \
  netcat \
  Pillow \
  python-numpy \
  pango1.0-tests \
  psmisc \
  python \
  python3-pip \
  python-dev \
  python-setuptools \
  ssl-cert \
  vim \
  zlib1g \
  zlib1g-dev

RUN ln -s /usr/lib/`uname -i`-linux-gnu/libfreetype.so /usr/lib/ &&\
  ln -s /usr/lib/`uname -i`-linux-gnu/libjpeg.so /usr/lib/ &&\
  ln -s /usr/lib/`uname -i`-linux-gnu/libz.so /usr/lib/ 
 
# Allows you to add additional packages via build-arg
ARG ADDITIONAL_PACKAGE

COPY --from=watchdog /fwatchdog /usr/bin/fwatchdog
RUN chmod +x /usr/bin/fwatchdog

# Add non root user

WORKDIR /home/app/

COPY index.py           .
COPY requirements.txt   .

ENV PATH=$PATH:/home/app/.local/bin:/home/app/python/bin/
ENV PYTHONPATH=$PYTHONPATH:/home/app/python

RUN pip install -r requirements.txt --target=/home/app/python

RUN mkdir -p function
RUN touch ./function/__init__.py

WORKDIR /home/app/function/
COPY function/requirements.txt	.

RUN pip install -r requirements.txt --target=/home/app/python

WORKDIR /home/app/

USER root

COPY function           function

ENV fprocess="python3 index.py"
EXPOSE 8080

HEALTHCHECK --interval=3s CMD [ -e /tmp/.lock ] || exit 1

CMD ["fwatchdog"]

RUN chmod +x /home/app/function/run.sh
CMD ["/bin/bash", "/home/app/function/run.sh"]
